name: Containers

on:
  workflow_dispatch:

  pull_request:
    branches:
      - main

  schedule:
    - cron: '27 1 * * *'

  release:
    types: [published]

jobs:
  tutorial-images:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix: 
        # 0: image name, 
        # 1: Dockerfile
        dockerfile: [
          [tutorial, docker/Dockerfile]
        ]
    name: Build ${{ matrix.dockerfile[0] }}
    steps:
      - name: Checkout
        uses: actions/checkout@a5ac7e51b41094c92402da3b24376905380afc29

      - name: Set Container Tag Normal (Nightly)
        run: |
          container="${{ matrix.dockerfile[0] }}:latest"
          echo "container=${container}" >> $GITHUB_ENV
          echo "versioned=${container}" >> $GITHUB_ENV

      - name: Set Container Tag on Release
        if: github.event_name == 'release'
        run: |
          versioned="${{matrix.dockerfile[0]}}:${GITHUB_REF##*/}"
          echo "versioned=${versioned}" >> $GITHUB_ENV

      - name: Check ${{ matrix.dockerfile[1] }} Exists
        run: |
          printf "Preparing to build ${{ env.container }} from ${{ matrix.dockerfile[1] }}"
          if [ ! -f "${{ matrix.dockerfile[1]}}" ]; then
              printf "Dockerfile ${{ matrix.dockerfile[1]}} does not exist"
              exit 1;
          fi

      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@d70bba72b1f3fd22344832f00baa16ece964efeb

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@0d4c9c5ea7693da7b068278f7b52bda2a190a446
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Build & Deploy ${{ matrix.dockerfile[0] }}
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25
        with:
          file: ${{matrix.dockerfile[1]}}
          platforms: linux/amd64
          context: ./docker
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/spack/${{ env.container }}
            ghcr.io/spack/${{ env.versioned }}
