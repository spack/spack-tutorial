$ module load mpich
$ module avail

------------------------- /home/spack/spack/share/spack/lmod/linux-ubuntu18.04-x86_64/mpich/4.0.2-dehzhtf/gcc/8.4.0 -------------------------
   netlib-scalapack/2.2.0-netlib-lapack	   netlib-scalapack/2.2.0-openblas (D)

----------------------------------- /home/spack/spack/share/spack/lmod/linux-ubuntu18.04-x86_64/gcc/8.4.0 -----------------------------------
   autoconf/2.69			     libedit/3.1-20210216	 numactl/2.0.14		     py-pybind11/2.8.1
   automake/1.16.5			     libevent/2.1.12		 openblas/0.3.21	     py-pythran/0.11.0-openblas
   berkeley-db/18.1.40			     libfabric/1.16.1	  (L)	 openmpi/4.1.4		     py-scipy/1.8.1-openblas
   bison/3.8.2				     libffi/3.4.2		 openssh/9.1p1		     py-setuptools/59.4.0
   bzip2/1.0.8				     libiconv/1.16	  (L)	 openssl/1.1.1s		     py-wheel/0.37.1
   ca-certificates-mozilla/2022-10-11	     libmd/1.0.4		 perl/5.36.0		     python/3.10.8
   cmake/3.24.3				     libpciaccess/0.16	  (L)	 pigz/2.7		     readline/8.1.2
   diffutils/3.8			     libsigsegv/2.13		 pkgconf/1.8.0		     sqlite/3.39.4
   expat/2.4.8				     libtool/2.4.7		 pmix/4.1.2		     tar/1.34
   findutils/4.9.0			     libxml2/2.10.1	  (L)	 py-beniget/0.4.1	     util-linux-uuid/2.38.1
   gdbm/1.23				     m4/1.4.19			 py-cython/0.29.32	     util-macros/1.19.3
   gettext/0.21.1			     mpich/4.0.2	  (L)	 py-gast/0.5.3		     xz/5.2.7			(L)
   hwloc/2.8.0			      (L)    ncurses/6.3	  (L)	 py-numpy/1.23.4-openblas    yaksa/0.2			(L)
   krb5/1.19.3				     netlib-lapack/3.10.1	 py-pip/22.2.2		     zlib/1.2.13		(L)
   libbsd/0.11.5			     ninja/1.11.1		 py-ply/3.11		     zstd/1.5.2

------------------------------------- /home/spack/spack/share/spack/lmod/linux-ubuntu18.04-x86_64/Core --------------------------------------
   gcc/8.4.0 (L)

  Where:
   D:  Default Module
   L:  Module is loaded

If the avail list is too long consider trying:

"module --default avail" or "ml -d av" to just list the default modules.
"module overview" or "ml ov" to display the number of modules for each name.

Use "module spider" to find all possible modules and extensions.
Use "module keyword key1 key2 ..." to search for all possible modules matching any of the "keys".


